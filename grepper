#!/bin/bash
# grepper - Rough code review tool using grep
set -- $GRARGS $@
set -e
set -o pipefail
VERSION='3.6'
basedir=$(dirname "$0")
BINFILE=$(which grep)

# Default values
hidebanner=0
context=1
color='always'
sigdb='default'
separator='##############################################'
excludefiles='--exclude=*.bz2 --exclude=*.gz --exclude=*.zip --exclude=*.rar --exclude=*.gif --exclude=*.jpg --exclude=*.png --exclude=*.map'

# Save custom colors
OLD_COLORS=$GREP_COLORS
OLD_COLOR=$GREP_COLOR

if [ ! -x "$BINFILE" ]; then
    echo "Can't find grep, which is a requirement to run grepper"
    exit 2
fi
$BINFILE --exclude-dir=. test "$0" >/dev/null 2>&1
if [ $? -eq 2 ]; then
    echo $?
    echo "grepper requires a newer version of grep (>=2.5.3)"
    exit 2
fi

banner() {
    if [ $hidebanner == 0 ]; then
    echo \
'===========================================================
   
   _____                                
  / ____|                               
 | |  __ _ __ ___ _ __  _ __   ___ _ __ 
 | | |_ | '__/ _ \ '_ \| '_ \ / _ \ '__|
 | |__| | | |  __/ |_) | |_) |  __/ |   
  \_____|_|  \___| .__/| .__/ \___|_|   
                 | |   | |              
                 |_|   |_|              

============================================================'
    fi
}

version () {
    echo "grepper version: $VERSION"
}

usage () {
    banner
    cat <<EOU
Usage: grepper [opts] /path/to/scan

OPTIONS
  -d <dbname> database to use or /path/to/file.db (uses default if not specified)
  -A scan unwanted and difficult (ALL) files
  -x exclude these files (comma separated list: -x *.js,*.sql)
  -i case in-sensitive scan
  -c <num> number of lines of context to display, default is 2

  -h prints this help screen
  -v prints version number

EOU
}

listdb () {
    set +e
    set +o pipefail
    banner
    if [ -n "$GRDIR" ] && [ -d "$GRDIR" ]; then
        ls -1 "$GRDIR"/*.db 2>/dev/null
    fi
    if [ -d /usr/share/grepper/ ]; then
        ls -1 /usr/share/grepper/*.db 2>/dev/null
    fi
    if [ -d ~/.grepper/ ]; then
        ls -1 ~/.grepper/*.db 2>/dev/null
    fi
    if [ -d "$basedir"/signatures/ ]; then
        ls -1 "$basedir"/signatures/*.db 2>/dev/null
    fi
    if [ -d "$basedir"/misc/ ]; then
        ls -1 "$basedir"/misc/*.db 2>/dev/null
    fi
    if [ -d ~/grepper/signatures/ ] && [ "$basedir" != "$HOME/grepper" ]; then
        ls -1 ~/grepper/signatures/*.db 2>/dev/null
    fi
}

while getopts "Ac:hi:x:d:v" opt; do
    case $opt in
        h)
            usage
            exit 1
        ;;
        v)
            version
            exit 0
        ;;
        l)
            listdb
            exit 0
        ;;
        c)
            context="$OPTARG"
        ;;
        d)
            sigdb="$OPTARG"
        ;;
        i)
            icase="-i"
        ;;
        x)
            OIFS=$IFS
            IFS=','
            for ign in $OPTARG; do
                ignorepattern="$ignorepattern --exclude=$ign"
            done
            IFS=$OIFS
        ;;
        A)
            excludefiles=""
        ;;
        \?) # unknown option
            usage
            exit 2
        ;;
    esac
done

# Remove arguments from $@
shift $((OPTIND-1))

# Database location can vary based on installation
if [ "$sigdb" == '-' ]; then
    database='/dev/stdin'
elif [ -f "$GRDIR/$sigdb.db" ]; then
    database="$GRDIR/$sigdb.db"
elif [ -f "/usr/share/grepper/$sigdb.db" ]; then
    database="/usr/share/grepper/$sigdb.db"
elif [ -f "$HOME/.grepper/$sigdb.db" ]; then
    database="$HOME/.grepper/$sigdb.db"
elif [ -f "$basedir/signatures/$sigdb.db" ]; then
    database="$basedir/signatures/$sigdb.db"
elif [ -f "$basedir/misc/$sigdb.db" ]; then
    database="$basedir/misc/$sigdb.db"
elif [ -f "$HOME/grepper/signatures/$sigdb.db" ]; then
    database="$HOME/grepper/signatures/$sigdb.db"
else
    database="$sigdb"
fi

if [ -z "$1" ]; then
    usage
    exit 2
fi

if [ ! -e $database ]; then
    banner
    echo
    echo "database path not found for db: \"$database\", try running grepper -h" >&2
    exit 2
fi

# -R is recursive
# -H prints the name of the file
# -C prints # lines of context before and after the match
# -E uses extended regexp
# -f specifies the rule file (signature database)
# -n prints the line number
banner
$BINFILE --color=$color \
         --exclude-dir=.svn \
         --exclude-dir=CVS \
         --exclude-dir=.git \
         $excludefiles \
         $icase $ignorepattern \
         -n -R -H -C "$context" -E \
         -f "$database" $@ | \
sed -e"s/$(printf '\r')//g" -e"s/^\(\x1b\[.*m\x1b\[K\)--\(\x1b\[.*\x1b\[K\)$/\1##############################################\2/" -e"s/^--$/$separator/"
SUCCESS=$?
export GREP_COLORS="$OLD_COLORS"
exit $SUCCESS
